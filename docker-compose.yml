version: "3.9" # optional since v1.27.0
services:
  cache:

  haproxy:
    # net: host
    networks:
      - web_crawler_network
    container_name: haproxy_container
    image: haproxy:alpine
    depends_on:
      - client_facing_server1
      - client_facing_server2
      - client_facing_server3

    restart: always

    ports:
      - 8080:8080
      - 8404:8404
    volumes:
      - ~/docker-conf/local/haproxy/:/usr/local/etc/haproxy
      - ~/go/src/github.com/Mohamed247/Distributed_Web_Crawler/HaProxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  postgres:
    container_name: postgres_container
    # network_mode: "host"
    networks:
      - web_crawler_network
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=DistributedWebCrawler
    ports:
      - 5432:5432
    volumes:
      - ~/docker-conf/postgresql/data/:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    # network_mode: "host"
    networks:
      - web_crawler_network
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/docker-conf/rabbitmq/log/:/var/log/rabbitmq

  client_facing_server1:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - rabbitmq
      - cache
    environment:
      - MY_PORT=5555
      - MY_HOST=client_facing_server1
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
    ports:
      - 5555:5555
    build:
      #    network: host
      context: ./
      dockerfile: ./clientFacingServer/Dockerfile
  client_facing_server2:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - rabbitmq
      - cache
    environment:
      - MY_PORT=5556
      - MY_HOST=client_facing_server2
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
    ports:
      - 5556:5556
    build:
      #    network: host
      context: ./
      dockerfile: ./clientFacingServer/Dockerfile
  client_facing_server3:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - rabbitmq
      - cache
    environment:
      - MY_PORT=5557
      - MY_HOST=client_facing_server3
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
    ports:
      - 5557:5557
    build:
      #    network: host
      context: ./
      dockerfile: ./clientFacingServer/Dockerfile

  # LOCK_SERVER --------------------------------------------------
  lock_server:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - postgres
    environment:
      - MY_PORT=9999
      - MY_HOST=lock_server
      - DB_PORT=5432
      - DB_HOST=postgres
    ports:
      - 9999:9999
    build:
      #    network: host
      context: ./
      dockerfile: ./Server/LockServer/Dockerfile

  # CLUSTER 1  ---------------------------------------------------
  master1:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - rabbitmq
      - lock_server
    environment:
      - MY_PORT=7777
      - MY_HOST=master1
      - LOCK_SERVER_PORT=9999
      - LOCK_SERVER_HOST=lock_server
      - MQ_HOST=rabbitmq
      - MQ_PORT=5672
    ports:
      - 7777:7777
    build:
      #    network: host
      context: ./
      dockerfile: ./Server/cluster/master/Dockerfile

  worker11:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - master1
    environment:
      - MASTER_PORT=7777
      - MASTER_HOST=master1
    build:
      #    network: host
      context: ./
      dockerfile: ./Server/cluster/worker/Dockerfile

  worker12:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - master1
    environment:
      - MASTER_PORT=7777
      - MASTER_HOST=master1
    build:
      #    network: host
      context: ./
      dockerfile: ./Server/cluster/worker/Dockerfile

  worker13:
    # network_mode: "host"
    networks:
      - web_crawler_network
    depends_on:
      - master1
    environment:
      - MASTER_PORT=7777
      - MASTER_HOST=master1

    build:
      #    network: host
      context: ./
      dockerfile: ./Server/cluster/worker/Dockerfile
networks:
  web_crawler_network:
    driver: bridge
